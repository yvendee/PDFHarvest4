Create structured output in the following format, ensuring each line adheres to the specified structure. Do not omit any brackets or any other elements, x is just the expected value. Follow this exact format:

Complete this:

[maid name]: x, ##Get this value from the 'Name'
[maid ref code]: x, #Get this value from the 'Code' or 'Ref. No.' or 'Ref' or 'Reference Code' field. It's usually located at the header of the first page or top of the image. The reference code may also be in the 'Name' field after the name, inside parentheses. If the reference code is not found or does not meet these criteria, return null.
[maid type]: x, #if not specifically stated then use the following logic. If the maid is currently working in Singapore then return “Transfer Maid”, else if maid has worked in Singapore previously then return “Ex-SG Maid”, else return “New Maid”. Make sure to check the employment history and work experience for the details.
[maid expected salary]: x, #The salary the maid expects to receive. If not found, return "null".
[availability status]:x , #One week|2 Weeks|4 5weeks|5 6weeks|Immediate. return "Other" if not found or invalid or not within the accepted values.
[youtube link]: x, #Link to any videos related to the maid, such as introductions or demonstrations. If not found, return "null".
[evalsg lang english stars]: x, # Get the integer value from the 'Assessment/Observation' column in the same row as the 'Language Abilities (spoken)' entry. It is above the text usually and if not found, return "null". Check the first table first; if not found or the table is empty, check the second table. 
[evalsg lang mandarin stars]: x, #Rating of the maid's Mandarin language skills according to the evaluation. If not found, return "null".
[evalsg lang malay stars]: x, #Rating of the maid's Malay language skills according to the evaluation. If not found, return "null".
[evalsg lang tamil stars]: x, #Rating of the maid's Tamil language skills according to the evaluation. If not found, return "null".
[evalsg lang hindi stars]: x, #Rating of the maid's Hindi language skills according to the evaluation. If not found, return "null".
[public maid introduction]: x, # Identify and extract all details under both the "Introduction" and "Other Remarks"  section. Extract all details under the "Introduction" until you can see a space or next section and if you are in "Other Remarks" section, extract all details until you can see  the next section ot encounter a line and under that is 'MDW Name and Signature' or details that are not clearly part of the introduction in Other Remarks. Do not summarize or omit any details. If either "Introduction" or "Other Remarks" sections are not found, or if both sections are blank or empty, return "null". Do not guess or introduce any random data
[date of birth]: x, # The date format is dd/MM/YYYY.
[place of birth]: x, #if not found, return "null".
[height cm]: x , #in cm and remove units and If not found just set "150"
[weight kg]:x , #in kg and remove units and If not found just set "Null"
[nationality]: x , #Filipino|Indonesian|Myanmarese|Indian|Bangladeshi|Sri Lankan|Cambodian|Thai|Malaysian
[sub nationality]: x, #Any additional or secondary nationality of the maid
[home address]: x, #The maid's residential address. If not found, return "null".
[home airport repatriate]: x, #The airport used for repatriation or return to the maid's home country. If not found, return "null".
[home contact number]: x, #The maid's contact number, all numbers only. If not found, return "null".
[religion]:  x, #Buddhist|Catholic|Christian|Free Thinker|Hindu|Muslim|Sikh|Others if invalid or not found. Get this value from Religion field. If value is Moslem, understand it as Muslim. Check for typos and edit if necessary as long as the value is within the accepted values.
[education]: x, #Accepted values: Primary Level (1-6 yrs)|Secondary Level (7-10 yrs)|High School (11-12 yrs)|Diploma/Degree (>=13 yrs)|Others. If possible, check thoroughly in the first page and get the value from the last education section or from the Education level field. If you understand it as a bachelor in science (e.g., BSC) or College Undergraduate or University Undergraduate, return "Diploma/Degree (>=13 yrs)." If you understand it as Junior High School or Yunior High School or Senior High School or High School (10~12 Yrs) or High School (10~12 yrs) or High School (1012 Yrs) or 10-12 or 10-12 Yrs or High School (10-12 Yrs) or ALS Graduate, return "High School (11-12 yrs)." If you understand it as class 8 or class 9 or 8th or 9th or Secondary level (7~9yrs) or Secondary level (8~9 yrs) or 7-9yrs or 7~9 yrs, return “Secondary Level (7-10 yrs)”.  If the value is invalid or not found, adjust the format to use - instead of ~ and ensure "yrs" is not capitalized. Match the accepted values. If it still doesn't match, return "Others". 
[siblings count]:x, # Get this value from the 'Number of siblings' field. If it says '1 of 3 siblings', understand it and return the number of siblings, e.g., if you're 1 of 3 siblings means you have 2 siblings
[marital status]: x, # Accepted values: Single|Married|Widowed|Divorced|Separated. Get this value from "Marital status" or the commonly misspelled "Marrital Status". Recognize and correct common typos and lowercases: "Merried" and "married" should return "Married", "Divorce" and "divorce" should return "Divorced", "Widow" and "widow" should return "Widowed". Ensure that the return value is within the accepted values.
[children count]: x , # if not found, return "null"
[children ages]: x , # if not found, return "null"
[allergies]: x, #Extract the text from the field labeled "Allergies (if any)." Return the extracted value as is. If the field is not found or the value is empty, return "null."
[illness mental]: x, #Locate the row labeled "Mental illness" under the "Past and existing illnesses" section. In the same row, check the first column (Yes) for a checkmark (✓). Check the second column (No) for an "x." Return "Yes" if the first column is marked with a checkmark (✓). Return "No" if the second column is marked with an "x" or if both columns are marked with an "x." If neither column is marked, or both columns are empty, return "No." 
[illness epilepsy]: x, #Locate the row labeled "Epilepsy" under the "Past and existing illnesses" section. In the same row, check the first column (Yes) for a checkmark (✓). Check the second column (No) for an "x." Return "Yes" if the first column is marked with a checkmark (✓). Return "No" if the second column is marked with an "x" or if both columns are marked with an "x." If neither column is marked, or both columns are empty, return "No." 
[illness asthma]: x, #Locate the row labeled "Asthma" under the "Past and existing illnesses" section. In the same row, check the first column (Yes) for a checkmark (✓). Check the second column (No) for an "x." Return "Yes" if the first column is marked with a checkmark (✓). Return "No" if the second column is marked with an "x" or if both columns are marked with an "x." If neither column is marked, or both columns are empty, return "No." 
[illness diabetes]: x, #Locate the row labeled "Diabetes" under the "Past and existing illnesses" section. In the same row, check the first column (Yes) for a checkmark (✓). Check the second column (No) for an "x." Return "Yes" if the first column is marked with a checkmark (✓). Return "No" if the second column is marked with an "x" or if both columns are marked with an "x." If neither column is marked, or both columns are empty, return "No." 
[illness hypertension]: x, #Locate the row labeled "Hypertension" under the "Past and existing illnesses" section. In the same row, check the first column (Yes) for a checkmark (✓). Check the second column (No) for an "x." Return "Yes" if the first column is marked with a checkmark (✓). Return "No" if the second column is marked with an "x" or if both columns are marked with an "x." If neither column is marked, or both columns are empty, return "No." 
[illness tuberculosis]: x, #Locate the row labeled "Tuberculosis" under the "Past and existing illnesses" section. In the same row, check the first column (Yes) for a checkmark (✓). Check the second column (No) for an "x." Return "Yes" if the first column is marked with a checkmark (✓). Return "No" if the second column is marked with an "x" or if both columns are marked with an "x." If neither column is marked, or both columns are empty, return "No." 
[illness heart disease]: x, #Locate the row labeled "Heart disease" under the "Past and existing illnesses" section. In the same row, check the first column (Yes) for a checkmark (✓). Check the second column (No) for an "x." Return "Yes" if the first column is marked with a checkmark (✓). Return "No" if the second column is marked with an "x" or if both columns are marked with an "x." If neither column is marked, or both columns are empty, return "No." 
[illness malaria]: x, #Locate the row labeled "Malaria" under the "Past and existing illnesses" section. In the same row, check the first column (Yes) for a checkmark (✓). Check the second column (No) for an "x." Return "Yes" if the first column is marked with a checkmark (✓). Return "No" if the second column is marked with an "x" or if both columns are marked with an "x." If neither column is marked, or both columns are empty, return "No." 
[illness operations]: x, #Locate the row labeled "Operations" under the "Past and existing illnesses" section. In the same row, check the first column (Yes) for a checkmark (✓). Check the second column (No) for an "x." Return "Yes" if the first column is marked with a checkmark (✓). Return "No" if the second column is marked with an "x" or if both columns are marked with an "x." If neither column is marked, or both columns are empty, return "No." 
[illness others]: x , #Locate the row labeled "Others" under the "Past and existing illnesses" section. After the "Others" label, extract the text that follows. If there is text present, return it as the value. If the field is empty or there is no text, return "No."
[physical disabilities]: x, #Extract the text from the field labeled "Physical disabilities." Return the extracted value as is. If the field is not found or the value is empty, return "null."
[dietary restrictions]: x, #Extract the text from the field labeled "Dietary restrictions." Return the extracted value as is. If the field is not found or the value is empty, return "null."
[handle pork]: x , # Locate the "Food handling preferences" section. Identify the checkbox labeled "No pork." If the "No pork" checkbox is checked, return "No" (meaning the maid cannot handle or cook pork). If the "No pork" checkbox is not checked, return "Yes" (meaning the maid can handle or cook pork). If not found, return "Yes" by default. If the biodata specifically mentions "can't handle pork," set the value to "No." If it mentions "can handle pork but can't eat," set the value to "Yes." 
[handle beef]: x , # Locate the "Food handling preferences" section. Identify the checkbox labeled "No beef." If the "No beef" checkbox is checked, return "No" (meaning the maid cannot handle or cook beef). If the "No beef" checkbox is not checked, return "Yes" (meaning the maid can handle or cook beef). If not found, return "Yes" by default. 
[handle pets]: x, # Locate the section related to handling pets. If the biodata specifically mentions "scared of dog," set the value to "No." Otherwise, return "Yes" by default, meaning the maid is comfortable with or can handle pets. If not found, return "Yes."
[handle others]: x, #Get this value ONLY from the ‘Others’ field that is on the same line and row of ‘Food handling preferences’ field. Don't get the value from the other 'Others' that is not on the same line and row of Food handling preferences. If not found, return "null".
[maid preferred rest day]:  x , #1 rest days per month|2 rest days per month|3 rest days per month|4 rest days per month|0 rest days per month, return 0 rest days per month if not found or invalid. Get this value from the 'Preference for rest day’ field
[maid other remarks]: x, #Get this value from the 'Any other remarks’ field
[eval no agency no trainingctr]: x, #Evaluation status if there is no agency or training center involved
[eval_agency]: x, #Extract the text from the line labeled "Interviewed by," specifically the underlined portion that indicates the name of the evaluating agency (e.g., "Singapore EA"). If the name of the agency is not found, return "null."
[eval_agency_telephone]: x, #Locate any contact number associated with the evaluating agency in the "Interviewed by" section or nearby. If a contact number is not provided, return "null."
[eval_agency_videoconference]:x, # Locate the checkbox labeled "Interviewed via videoconference." Determine if the checkbox is either checked or filled to indicate "Yes." If the checkbox is either checked or filled, return "Yes." If it is empty or not filled, return "No." If the information is missing, return "null."
[eval_agency_in_person]: x, #Locate the checkbox labeled "Interviewed in person." Determine if the checkbox is either checked or filled to indicate "Yes." If the checkbox is either checked or filled, return "Yes." If it is empty or not filled, return "No." If the information is missing, return "null."
[eval_agency_in_person_observation]:x, # Locate the checkbox labeled "Interviewed in person and also made observation of MDW in the areas of work listed in table." Determine if the checkbox is either checked or filled to indicate "Yes." If the checkbox is either checked or filled, return "Yes." If it is empty or not filled, return "No." If the information is missing, return "null."
[eval agency age range infant child]: x , # Locate the "Care of infants/children" entry under the "Areas of Work" column. In the same box, identify and extract the age range specified. If no age range is provided, return "null."
[eval agency willing infant child]: x , # Locate the "Willingness" column in the same row as the "Care of infants/children" entry. Extract the value as "Yes" or "No" only. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. If there is no table for "Areas of Work," read through the biodata in "Personal Skills" to get the details.
[eval agency years infant child]: x , # Locate the "Experience (Years)" column in the same row as the "Care of infants/children" entry. Extract the number of years of experience. Integer value only. If there are two integers, add them and return the total value. If the field is empty, return "null." Do not extract the number of stars; only get the value from the Experience column.
[eval agency stars infant child]: x , # Locate the "Assessment/Observation" column in the same row as the "Care of infants/children" entry. Identify and extract the star rating, then get the integer value usually in the Rate section, which ranges from 1 to 5. If no star rating is provided or it’s marked as "N.A.," return "null."
[eval agency comments infant child]: x , # Locate the "Assessment/Observation" column in the same row as the "Care of infants/children" entry. Extract the comments provided by the agency regarding the maid’s experience with infants and children. Ensure to get all details except any integer values that represent stars (1-5). If there are no comments, return "null."
[eval agency willing elderly]: x , # Locate the "Willingness" column in the same row as the "Care of elderly" entry. Extract the value as "Yes" or "No" only. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. If there is no table for "Areas of Work," read through the biodata in "Personal Skills" to get the details.
[eval agency years elderly]: x , # Locate the "Experience (Years)" column in the same row as the "Care of elderly" entry. Extract the number of years of experience. Integer value only. If the field is empty, return "null." Do not extract the number of stars; only get the value from the Experience column.
[eval agency stars elderly]: x , # Locate the "Assessment/Observation" column in the same row as the "Care of elderly" entry. Identify and extract the star rating, then get the integer value usually in the Rate section, which ranges from 1 to 5. If no star rating is provided or it’s marked as "N.A.," return "null."
[eval agency comments elderly]: x , # Locate the "Assessment/Observation" column in the same row as the "Care of elderly" entry. Extract the comments provided by the agency regarding the maid’s experience with elderly individuals. Ensure to get all details except any integer values that represent stars (1-5). If there are no comments, return "null."
[eval agency willing disabled]: x , # Locate the "Willingness" column in the same row as the "Care of disabled" entry. Extract the value as "Yes" or "No" only. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. If there is no table for "Areas of Work," read through the biodata in "Personal Skills" to get the details.
[eval agency years disabled]: x , # Locate the "Experience (Years)" column in the same row as the "Care of disabled" entry. Extract the number of years of experience. Integer value only. If the field is empty, return "null." Do not extract the number of stars; only get the value from the Experience column.
[eval agency stars disabled]: x , # Locate the "Assessment/Observation" column in the same row as the "Care of disabled" entry. Identify and extract the star rating, then get the integer value usually in the Rate section, which ranges from 1 to 5. If no star rating is provided or it’s marked as "N.A.," return "null."
[eval agency comments disabled]: x , # Locate the "Assessment/Observation" column in the same row as the "Care of disabled" entry. Extract the comments provided by the agency regarding the maid’s experience with disabled individuals. Ensure to get all details except any integer values that represent stars (1-5). If there are no comments, return "null."
[eval agency willing housework]: x , # Locate the "Willingness" column in the same row as the "General housework" entry. Extract the value as "Yes" or "No" only. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. If there is no table for "Areas of Work," read through the biodata in "Personal Skills" to get the details.
[eval agency years housework]: x , # Locate the "Experience (Years)" column in the same row as the "General housework" entry. Extract the number of years of experience. Integer value only. If the field is empty, return "null." Do not extract the number of stars; only get the value from the Experience column.
[eval agency stars housework]: x , # Locate the "Assessment/Observation" column in the same row as the "General housework" entry. Identify and extract the star rating, then get the integer value usually in the Rate section, which ranges from 1 to 5. If no star rating is provided or it’s marked as "N.A.," return "null."
[eval agency comments housework]: x , # Locate the "Assessment/Observation" column in the same row as the "General housework" entry. Extract the comments provided by the agency regarding the maid’s experience with housework. Ensure to get all details except any integer values that represent stars (1-5). If there are no comments, return "null."
[eval agency specify cuisines cooking]: x , # Locate the "Assessment/Observation" column in the same row as the "Cooking" entry. Extract the specific cuisines mentioned in the comments. If no specific cuisines are mentioned, return "null."
[eval agency willing cooking]: x , # Locate the "Willingness" column in the same row as the "Cooking" entry. Extract the value as "Yes" or "No" only. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value. If there is no table for "Areas of Work," read through the biodata in "Personal Skills" to get the details.
[eval agency years cooking]: x , # Locate the "Experience (Years)" column in the same row as the "Cooking" entry. Extract the number of years of experience. Integer value only. If the field is empty, return "null." Do not extract the number of stars; only get the value from the Experience column.
[eval agency stars cooking]: x , # Locate the "Assessment/Observation" column in the same row as the "Cooking" entry. Identify and extract the star rating, then get the integer value usually in the Rate section, which ranges from 1 to 5. If no star rating is provided or it’s marked as "N.A.," return "null."
[eval agency comments cooking]: x , # Locate the "Assessment/Observation" column in the same row as the "Cooking" entry. Extract the comments provided by the agency regarding the maid’s cooking skills. Ensure to get all details except any integer values that represent stars (1-5). If there are no comments, return "null."
[eval agency language]: x , # Locate the "Language abilities (spoken)" section under the "Assessment/Observation" column. Extract the languages listed in the table under the "Language" column. Include all languages that are evaluated.
[eval agency willing language]: x , # Locate the "Willingness" column in the same row as the "Language abilities (spoken)" entry. Extract the value as "Yes" or "No" only. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value.
[eval agency years language]: x , # Locate the "Experience (Years)" column in the "Language abilities (spoken)" section. Extract the number of years of experience for each language. If the field is empty, return "null." Do not extract the number of stars; only get the value from the Experience column.
[eval agency stars language]: x , # Locate the "Assessment/Observation" column in the same row as each language in the "Language abilities (spoken)" section. Identify and extract the star rating or level (e.g., Good, Excellent) provided for each language.
[eval agency comments language]: x , # Locate the "Assessment/Observation" column in the same row as the "Language abilities (spoken)" entry and extract the comments provided by the agency regarding the maid’s language skills. If there is a table instead of text comments, summarize the table in the "Assessment/Observation" section for the "Language abilities (spoken)" row. For each language listed, summarize the evaluation in the format: "{Language} is {Level} with {Years} years of experience." For example, "English is Good with 0 years of experience." If there are multiple languages, summarize each in the same format. If the experience column is blank, return "0 years." If there are no comments or no table, return "null."
[eval agency specify other skills]: x , # Locate the "Please specify" line in the "Areas of Work" column in the same row as the "Other skills, if any" entry. Extract the specific skills listed, followed by the corresponding value from the "Assessment/Observation" column in the same row. Only return the text, not the integer. If the "Please specify" line or the "Assessment/Observation" value is not found, return "null." Check the first table first; if not found or the table is empty, check the second table.
[eval agency willing other skills]: x , # Locate the "Willingness" column in the same row as the "Other skills, if any" entry. Extract the value as "Yes" or "No" only. Check the first table first; if not found or the table is empty, check the second table. Do not guess or infer the value.  If there is no table for "Areas of Work," read through the biodata in "Personal Skills" to get the details.
[eval agency years other skills]: x , # Locate the "Experience (Years)" column in the same row as the "Other skills, if any" entry. Extract the number of years of experience. Integer value only. If the field is empty, return "null." Do not extract the number of stars; only get the value from the Experience column.
[eval agency stars other skills]: x , # Locate the "Assessment/Observation" column in the same row as the "Other skills, if any" entry. Identify and extract the star rating, then get the integer value usually in the Rate section, which ranges from 1 to 5. If no star rating is provided or it’s marked as "N.A.," return "null."
[eval agency comments other skills]: x , # Locate the "Assessment/Observation" column in the same row as the "Other skills, if any" entry. Extract all comments provided by the agency regarding the maid’s other skills. Make sure to extract all the details except any integers that represent star ratings. If there are no comments, return "null."
[trainingctr name]: x, #Name of the training center that evaluated or trained the maid. If not found, return "null".
[trainingctr certified]: x, #Whether the training center is certified. If not found, return "null".
[eval trainingctr telephone]: x, #Contact number of the training center. If not found, return "null".
[eval trainingctr videoconference]: x, #Whether the evaluation by the training center was conducted via videoconference. If not found, return "null".
[eval trainingctr in person]: x, #Whether the evaluation by the training center was conducted in person. If not found, return "null".
[eval trainingctr in person observation]: x, #Details about the in-person observation by the training center. If not found, return "null".
[eval trainingctr age range infant child]: x, #The age range of infants and children the maid is evaluated for by the training center. If not found, return "null".
[eval trainingctr willing infant child]: x, #Whether the maid is willing to work with infants and children according to the training center. If not found, return "null".
[eval trainingctr years infant child]: x, #Years of experience with infants and children according to the training center. If not found, return "null".
[eval trainingctr stars infant child]: x, #Star rating of the maid’s experience with infants and children according to the training center. If not found, return "null".
[eval trainingctr comments infant child]: x, #Comments from the training center regarding the maid’s experience with infants and children. If not found, return "null".
[eval trainingctr willing elderly]: x, #Whether the maid is willing to work with elderly individuals according to the training center. If not found, return "null".
[eval trainingctr years elderly]: x, #Years of experience with elderly individuals according to the training center. If not found, return "null".
[eval trainingctr stars elderly]: x, #Star rating of the maid’s experience with elderly individuals according to the training center. If not found, return "null".
[eval trainingctr comments elderly]: x, #Comments from the training center regarding the maid’s experience with elderly individuals. If not found, return "null".
[eval trainingctr willing disabled]: x, #Whether the maid is willing to work with disabled individuals according to the training center. If not found, return "null".
[eval trainingctr years disabled]: x, #Years of experience with disabled individuals according to the training center. If not found, return "null".
[eval trainingctr stars disabled]: x, #Star rating of the maid’s experience with disabled individuals according to the training center. If not found, return "null".
[eval trainingctr comments disabled]: x, #Comments from the training center regarding the maid’s experience with disabled individuals. If not found, return "null".
[eval trainingctr willing housework]: x, #Whether the maid is willing to perform housework according to the training center. If not found, return "null".
[eval trainingctr years housework]: x, #Years of experience with housework according to the training center. If not found, return "null".
[eval trainingctr stars housework]: x, #Star rating of the maid’s experience with housework according to the training center. If not found, return "null".
[eval trainingctr comments housework]: x, #Comments from the training center regarding the maid’s experience with housework. If not found, return "null".
[eval trainingctr specify cuisines cooking]: x, #Specific cuisines the maid is evaluated for cooking by the training center. If not found, return "null".
[eval trainingctr willing cooking]: x, #Whether the maid is willing to cook according to the training center. If not found, return "null".
[eval trainingctr years cooking]: x, #Years of cooking experience according to the training center. If not found, return "null".
[eval trainingctr stars cooking]: x, #Star rating of the maid’s cooking skills according to the training center. If not found, return "null".
[eval trainingctr comments cooking]: x, #Comments from the training center regarding the maid’s cooking skills. If not found, return "null".
[eval trainingctr language]: x, #Languages evaluated by the training center. If not found, return "null".
[eval trainingctr willing language]: x, #Whether the maid is willing to use additional languages according to the training center. If not found, return "null".
[eval trainingctr years language]: x, #Years of experience with languages according to the training center. If not found, return "null".
[eval trainingctr stars language]: x, #Star rating of the maid’s language skills according to the training center. If not found, return "null".
[eval trainingctr comments language]: x, #Comments from the training center regarding the maid’s language skills. If not found, return "null".
[eval trainingctr specify other skills]: x, #Any other specific skills evaluated by the training center. If not found, return "null".
[eval trainingctr willing other skills]: x, #Whether the maid is willing to use additional skills according to the training center. If not found, return "null".
[eval trainingctr years other skills]: x, #Years of experience with other skills according to the training center. If not found, return "null".
[eval trainingctr stars other skills]: x, #Star rating of the maid’s other skills according to the training center. If not found, return "null".
[eval trainingctr comments other skills]: x, #Comments from the training center regarding the maid’s other skills. If not found, return "null".
[employment history]:  x ,
# Copy all details from "Employment History Overseas table" or "Employment History table" exactly as they appear.
# Include date, country, employer, work duties, and remarks without any alterations.
# the structure like this:
# - date: {date_value}
# - country: {country_value}
# - employer: {employer_value}
# - work duties: {work_duties_value1, work_value2, ..}
# - remarks: {remark_value1}
# If there is no table for Employment History, read through the biodata to get all the work experience details. Don't bring random data and random brackets and details.
[employer1_date_from]: x, # Extract the text directly from the "Date From" cell corresponding to the first row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value, with no extra labels or concatenations. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer1_date_to]: x, # Extract the text directly from the "Date To" cell corresponding to the first row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer1_country]: x, # Extract the text directly from the "Country" cell corresponding to the first row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the country value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer1_name]: x, # Extract the text directly from the "Employer" cell corresponding to the first row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the employer's name. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer1_work_duties]: x, # Extract the text directly from the "Work Duties" cell corresponding to the first row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the work duties. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer1_remarks]: x, # Extract the text directly from the "Remarks" cell corresponding to the first row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the remarks. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer2_date_from]: x, # Extract the text directly from the "Date From" cell corresponding to the second row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value, with no extra labels or concatenations. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer2_date_to]: x, # Extract the text directly from the "Date To" cell corresponding to the second row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer2_country]: x, # Extract the text directly from the "Country" cell corresponding to the second row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the country value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer2_name]: x, # Extract the text directly from the "Employer" cell corresponding to the second row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the employer's name. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer2_work_duties]: x, # Extract the text directly from the "Work Duties" cell corresponding to the second row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the work duties. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer2_remarks]: x, # Extract the text directly from the "Remarks" cell corresponding to the second row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the remarks. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer3_date_from]: x, # Extract the text directly from the "Date From" cell corresponding to the third row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value, with no extra labels or concatenations. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer3_date_to]: x, # Extract the text directly from the "Date To" cell corresponding to the third row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer3_country]: x, # Extract the text directly from the "Country" cell corresponding to the third row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the country value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer3_name]: x, # Extract the text directly from the "Employer" cell corresponding to the third row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the employer's name. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer3_work_duties]: x, # Extract the text directly from the "Work Duties" cell corresponding to the third row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the work duties. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer3_remarks]: x, # Extract the text directly from the "Remarks" cell corresponding to the third row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the remarks. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer4_date_from]: x, # Extract the text directly from the "Date From" cell corresponding to the fourth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value, with no extra labels or concatenations. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer4_date_to]: x, # Extract the text directly from the "Date To" cell corresponding to the fourth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer4_country]: x, # Extract the text directly from the "Country" cell corresponding to the fourth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the country value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer4_name]: x, # Extract the text directly from the "Employer" cell corresponding to the fourth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the employer's name. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer4_work_duties]: x, # Extract the text directly from the "Work Duties" cell corresponding to the fourth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the work duties. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer4_remarks]: x, # Extract the text directly from the "Remarks" cell corresponding to the fourth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the remarks. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer5_date_from]: x, # Extract the text directly from the "Date From" cell corresponding to the fifth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value, with no extra labels or concatenations. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer5_date_to]: x, # Extract the text directly from the "Date To" cell corresponding to the fifth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer5_country]: x, # Extract the text directly from the "Country" cell corresponding to the fifth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the country value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer5_name]: x, # Extract the text directly from the "Employer" cell corresponding to the fifth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the employer's name. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer5_work_duties]: x, # Extract the text directly from the "Work Duties" cell corresponding to the fifth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the work duties. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer5_remarks]: x, # Extract the text directly from the "Remarks" cell corresponding to the fifth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the remarks. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer6_date_from]: x, # Extract the text directly from the "Date From" cell corresponding to the sixth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value, with no extra labels or concatenations. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer6_date_to]: x, # Extract the text directly from the "Date To" cell corresponding to the sixth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer6_country]: x, # Extract the text directly from the "Country" cell corresponding to the sixth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the country value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer6_name]: x, # Extract the text directly from the "Employer" cell corresponding to the sixth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the employer's name. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer6_work_duties]: x, # Extract the text directly from the "Work Duties" cell corresponding to the sixth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the work duties. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer6_remarks]: x, # Extract the text directly from the "Remarks" cell corresponding to the sixth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the remarks. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer7_date_from]: x, # Extract the text directly from the "Date From" cell corresponding to the seventh row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value, with no extra labels or concatenations. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer7_date_to]: x, # Extract the text directly from the "Date To" cell corresponding to the seventh row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer7_country]: x, # Extract the text directly from the "Country" cell corresponding to the seventh row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the country value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer7_name]: x, # Extract the text directly from the "Employer" cell corresponding to the seventh row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the employer's name. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer7_work_duties]: x, # Extract the text directly from the "Work Duties" cell corresponding to the seventh row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the work duties. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer7_remarks]: x, # Extract the text directly from the "Remarks" cell corresponding to the seventh row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the remarks. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.

[employer8_date_from]: x, # Extract the text directly from the "Date From" cell corresponding to the eighth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value, with no extra labels or concatenations. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer8_date_to]: x, # Extract the text directly from the "Date To" cell corresponding to the eighth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the date value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer8_country]: x, # Extract the text directly from the "Country" cell corresponding to the eighth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the country value. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer8_name]: x, # Extract the text directly from the "Employer" cell corresponding to the eighth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the employer's name. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer8_work_duties]: x, # Extract the text directly from the "Work Duties" cell corresponding to the eighth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the work duties. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[employer8_remarks]: x, # Extract the text directly from the "Remarks" cell corresponding to the eighth row of the employer's details under "Employment History Overseas" or "Employment History of the MDW." Ensure to extract only the remarks. Return the value as is. If the cell is empty or not found, return "null." If there is no "Employment History Overseas" table, check the "Introduction" entry to get the employment details.
[prev work in sg]: x, # Check the "Employment History" section and identify the countries where the maid has previously worked. Specifically check if "Singapore" is listed among the countries. If the maid has previous work experience in Singapore, return "Yes." If not found, return "No." If the "Employment History" section is missing or no details are provided, return "null."
[maid prev feedback1]: x, #Extract the text from the cell in the "Feedback" column corresponding to the first employer's row under "Feedback from previous employers in Singapore." Return the value as is. If the cell is empty, return "null."
[maid prev feedback2]: x, #Extract the text from the cell in the "Feedback" column corresponding to the second employer's row under "Feedback from previous employers in Singapore." Return the value as is. If the cell is empty, return "null."
[avail_interview_not_available]: x, #Extract the status (checked or unchecked) from the checkbox labeled "MDW is not available for interview" under section (D) "AVAILABILITY OF MDW TO BE INTERVIEWED BY PROSPECTIVE EMPLOYER." Return "Yes" if the checkbox is checked, otherwise return "No." If the information is missing, return "null."
[avail_interview_phone]: x, #Extract the status (checked or unchecked) from the checkbox labeled "MDW can be interviewed by phone" under section (D) "AVAILABILITY OF MDW TO BE INTERVIEWED BY PROSPECTIVE EMPLOYER." Return "Yes" if the checkbox is checked, otherwise return "No." If the information is missing, return "null."
[avail_interview_videoconference]: x, #Extract the status (checked or unchecked) from the checkbox labeled "MDW can be interviewed by video-conference" under section (D) "AVAILABILITY OF MDW TO BE INTERVIEWED BY PROSPECTIVE EMPLOYER." Return "Yes" if the checkbox is checked, otherwise return "No." If the information is missing, return "null."
[avail_interview_in_person]: x, #Extract the status (checked or unchecked) from the checkbox labeled "MDW can be interviewed in person" under section (D) "AVAILABILITY OF MDW TO BE INTERVIEWED BY PROSPECTIVE EMPLOYER." Return "Yes" if the checkbox is checked, otherwise return "No." If the information is missing, return "null."
[other remarks]: x, #Any other remarks or information not covered in the other fields. If not found, return "null".
[maid passport no]: x, #The maid's passport number. If not found, return "null".
[trainingctr maid introduction]: x, #Introduction provided by the training center about the maid. If not found, return "null".
[internal notes]: x, #Internal notes for use by the agency or relevant parties. If not found, return "null".